|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|

Aula 01 - 

IDE = Integrated Development Environmet
ASP = Active Server Pages
-- Razor / Blazor
ORM = OBJECT RELATIONAL MAPPING

Aplicação Web
Opera em uma arquitetura Client (Minha máquina) / Server (DataCenter que hospeda o site)

DNS = DOMAIN NAME SYSTEM

HTTP / HTTPS = HYPERTEXT TRANSFER PROTOCOL (SECURE)

HTML = HYPERTEXT MARKUP LANGUAGE

ARQUITETURA MVC = MODEL VIEW CONTROLER

MODEL (MODELO) = especifica os dados que compõem a aplicação
CONTROL (CONTROLADOR) = Responde ao comandos na aplicação - Camada da aplicação que vai responder os comandos
VIEW (VISÃO) = Tela / User interface - Arquitetura do sistema

|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|

Aula 02 - 
git init 
git satus
git remote - v
git remote add origin https://github.com/pedroalbe31/Programacao25.git

|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|

Aula 03 - 

Método contrutor tem o mesmo nome da classe
Retorna o objeto do tipo da classe


|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|

Aula 04 -
Database Schools
DOM - Document Object Model
|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|

Aula 05 -

MVC - Padrão de Arquitetura
Model > Controller > View
GUI - Guide User Interface / UI - UserInterface / UX - UserExperience

|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|

tr = tabble road
td = table data

1- linhas igual
2- colunas iguais
3- Linha + coluna = 2 (i + j = 2)
4- Linha == Coluna (j == i)

|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|

Aula 06 - 

OOP - PROGRAMAÇÃO ORIENTADA A OBJETO
Clean Code - Defensive Coding 0 iterative agile - API (Axes Program Interface) - Design Patterns - Domain Driven Design - .NET apps
-------------
Classe 
Formada por propriedades e funções/métodos que compõem os membros da classe
-------------
Objeto
Variável que possibilita o acesso aos métodos (ações) e propreiedades especificadas pela classe
-------------
Paradigma = Modelo Padrão a ser seguido
-------------
Objetos de Negócios - são as classes projetadas para solucionar problemas de um determinado domínio de alicação do software.
-------------

Exercicio 
Tabelas: Animal | Veterinario | Atendimentos | Clinica

Animal: ID, Nome, Raça, Data nascimento, Peso, Altura, Responsável

Veterinario: ID, Nome, Email, CRM, Documento, Data nascimento

Atendimentos: ID, Animal, Veterinario, Data e hora, Local, Laudo

Clinica: Endereço, Data e hora
|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|

Aula 07 - 

Organizando a Estrutura da Aplicação em CAMADAS:
Camada de interface;
Camada de Logica de negócios;
Camada de Acesso de dados;
Camada de Código Comum.

|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|

Aula 08-

Estruturar dados em strigs

1° Estrutura Delimitada: escolho caracter (geralmente ";") para delimitar, por exemplo em Excel

2° Tamanho Fixo: exemplo de boleto padrão;

Pesquisar padrão CQRS (comands and querys)

Tarefa: fazer o mesmo no product

|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|

Aula 09- 
Pesquisar ---- Injeção de dependência (Dependecy Injection)

|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|

Binding => Amarração



|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
